{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to RobotCode \u00b6 An extension which brings support for RobotFramework to Visual Studio Code , including features like code completion, debugging, test explorer, refactoring and more! Features \u00b6 With RobotCode you can edit your code with auto-completion, code navigation, syntax checking and many more. Here is a list of Features: Autocomplete and IntelliSense Code Navigation Diagnostics and Linting Code Formatting Running and Debugging Multi-root Workspace folders Find implementations and references of keywords, variables, libraries, resource and variable files Show codelenses for keyword definitions Test Explorer Refactorings renaming keywords, variables, tags Autocomplete and IntelliSense \u00b6 Autocompletion for: - Libraries with parameters - Resources, - Variables - Keywords with parameters - Namespaces Autocompletion supports all supported variables types - local variables - variables from resource files - variables from variables file (.py and .yaml) - static and dynamic - command line variables - builtin variables Code Navigation \u00b6 Symbols Goto definitions and implementations Keywords Variables Libraries Resources Find references Keywords Variables Imports Libraries Resources Variables Tags Errors and Warnings Diagnostics and Linting \u00b6 RobotCode analyse your code and show diagnostics for: Syntax Errors Unknown keywords Duplicate keywords Missing libraries, resource and variable imports Duplicate libraries, resource and variable imports ... and many more For most things RobotCode uses the installed RobotFramework version to parse and analyse the code, so you get the same errors as when you run it. Get additional code analysis with Robocop . Just install it in your python environment. Code Formatting \u00b6 RobotCode can format your code with the internal RobotFramework robot.tidy tool (deprecated), but also with Robotidy . Just install it. Running and Debugging \u00b6 RobotCode supports running and debugging of RobotFramework testcases and tasks out of the box, directly from the definition of the test or suite. In the debug console you can see all log messages of the current run and navigate to the keyword the message was written by. Multi-root Workspace folders \u00b6 RobotCodes support for Multi-root Workspaces , enables loading and editing different Robotframework projects/folders with different RobotFramework/Python environments and settings at the same time or you can share the same RobotFramework/Python environment and settings for all folders in the workspace.","title":"Home"},{"location":"#welcome-to-robotcode","text":"An extension which brings support for RobotFramework to Visual Studio Code , including features like code completion, debugging, test explorer, refactoring and more!","title":"Welcome to RobotCode"},{"location":"#features","text":"With RobotCode you can edit your code with auto-completion, code navigation, syntax checking and many more. Here is a list of Features: Autocomplete and IntelliSense Code Navigation Diagnostics and Linting Code Formatting Running and Debugging Multi-root Workspace folders Find implementations and references of keywords, variables, libraries, resource and variable files Show codelenses for keyword definitions Test Explorer Refactorings renaming keywords, variables, tags","title":"Features"},{"location":"#autocomplete-and-intellisense","text":"Autocompletion for: - Libraries with parameters - Resources, - Variables - Keywords with parameters - Namespaces Autocompletion supports all supported variables types - local variables - variables from resource files - variables from variables file (.py and .yaml) - static and dynamic - command line variables - builtin variables","title":"Autocomplete and IntelliSense"},{"location":"#code-navigation","text":"Symbols Goto definitions and implementations Keywords Variables Libraries Resources Find references Keywords Variables Imports Libraries Resources Variables Tags Errors and Warnings","title":"Code Navigation"},{"location":"#diagnostics-and-linting","text":"RobotCode analyse your code and show diagnostics for: Syntax Errors Unknown keywords Duplicate keywords Missing libraries, resource and variable imports Duplicate libraries, resource and variable imports ... and many more For most things RobotCode uses the installed RobotFramework version to parse and analyse the code, so you get the same errors as when you run it. Get additional code analysis with Robocop . Just install it in your python environment.","title":"Diagnostics and Linting"},{"location":"#code-formatting","text":"RobotCode can format your code with the internal RobotFramework robot.tidy tool (deprecated), but also with Robotidy . Just install it.","title":"Code Formatting"},{"location":"#running-and-debugging","text":"RobotCode supports running and debugging of RobotFramework testcases and tasks out of the box, directly from the definition of the test or suite. In the debug console you can see all log messages of the current run and navigate to the keyword the message was written by.","title":"Running and Debugging"},{"location":"#multi-root-workspace-folders","text":"RobotCodes support for Multi-root Workspaces , enables loading and editing different Robotframework projects/folders with different RobotFramework/Python environments and settings at the same time or you can share the same RobotFramework/Python environment and settings for all folders in the workspace.","title":"Multi-root Workspace folders"},{"location":"features/","text":"coming soon...","title":"Features"},{"location":"installation/","text":"comming soon ... def do_something (): pass *** Settings *** Documentation A test suite with a single test. *** Test Cases *** Example Log Hello, Robot!","title":"Installation"},{"location":"cli/about/","text":"About Commandline Interface \u00b6 TODO","title":"About"},{"location":"cli/about/#about-commandline-interface","text":"TODO","title":"About Commandline Interface"},{"location":"cli/reference/","text":"robotcode \u00b6 Usage: robotcode [OPTIONS] COMMAND [ARGS]... Options: --version Show the version and exit. -c, --config PATH Config file to use. -p, --profile TEXT The Execution Profile to use. Can be specified multiple times. If not specified, the default profile is used. -d, --dry Dry run, do not execute any commands. --color / --no-color Whether or not to display colored output (default is auto-detection). -v, --verbose Enables verbose mode. --help Show this message and exit. Subcommands analyze : Analyzes a Robot Framework project. clean : TODO: Cleans a Robot Framework project. config : Commands to give informations about a robotframework configuration. debug : TODO: Debug a Robot Framework run. libdoc : Runs \"libdoc\" with the selected configuration, profiles, options and arguments. new : TODO: Create a new Robot Framework project. profiles : Commands to give informations about Robot Framework profiles. rebot : Runs \"rebot\" with the selected configuration, profiles, options and arguments. robot : Runs \"robot\" with the selected configuration, profiles, options and arguments. robotcode analyze \u00b6 Analyzes a Robot Framework project. TODO: This is not implemented yet. Usage: robotcode analyze [OPTIONS] Options: --version Show the version and exit. --help Show this message and exit. robotcode clean \u00b6 TODO: Cleans a Robot Framework project. TODO: This is not implemented yet. Usage: robotcode clean [OPTIONS] Options: --help Show this message and exit. robotcode config \u00b6 Commands to give informations about a robotframework configuration. By default the combined configuration is shown. Usage: robotcode config [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. Subcommands files : Shows Robot Framework configuration files. root : Shows the root of the Robot Framework project. show : Shows Robot Framework configuration. robotcode config files \u00b6 Shows Robot Framework configuration files. Usage: robotcode config files [OPTIONS] [PATHS]... Options: --help Show this message and exit. robotcode config root \u00b6 Shows the root of the Robot Framework project. Usage: robotcode config root [OPTIONS] [PATHS]... Options: --help Show this message and exit. robotcode config show \u00b6 Shows Robot Framework configuration. Usage: robotcode config show [OPTIONS] [PATHS]... Options: -f, --format [toml|json|flat] Set the output format. [default: toml] -s, --single Shows single files, not the combined config. --help Show this message and exit. robotcode debug \u00b6 TODO: Debug a Robot Framework run. TODO: This is not implemented yet. Usage: robotcode debug [OPTIONS] Options: --help Show this message and exit. robotcode libdoc \u00b6 Runs \"libdoc\" with the selected configuration, profiles, options and arguments. The options and arguments are passed to \"libdoc\" as is. Use \"-- --help\" to see the libdoc help. Usage: robotcode libdoc [OPTIONS] [ROBOT_OPTIONS_AND_ARGS]... Options: --version Show the version and exit. --help Show this message and exit. robotcode new \u00b6 TODO: Create a new Robot Framework project. TODO: This is not implemented yet. Usage: robotcode new [OPTIONS] Options: --help Show this message and exit. robotcode profiles \u00b6 Commands to give informations about Robot Framework profiles. Usage: robotcode profiles [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. Subcommands list : List the defined profiles in the given Robot Framework configuration. show : Shows the given Robot Framework profile. robotcode profiles list \u00b6 List the defined profiles in the given Robot Framework configuration. Usage: robotcode profiles list [OPTIONS] [PATHS]... Options: -f, --format [toml|json|flat] Set the output format. [default: flat] --help Show this message and exit. robotcode profiles show \u00b6 Shows the given Robot Framework profile. Usage: robotcode profiles show [OPTIONS] [PATHS]... Options: -f, --format [toml|json|flat] Set the output format. [default: toml] --help Show this message and exit. robotcode rebot \u00b6 Runs \"rebot\" with the selected configuration, profiles, options and arguments. The options and arguments are passed to \"rebot\" as is. Use \"-- --help\" to see the rebot help. Usage: robotcode rebot [OPTIONS] [ROBOT_OPTIONS_AND_ARGS]... Options: --version Show the version and exit. --help Show this message and exit. robotcode robot \u00b6 Runs \"robot\" with the selected configuration, profiles, options and arguments. The options and arguments are passed to \"robot\" as is. Use \"-- --help\" to see the robot help. Usage: robotcode robot [OPTIONS] [ROBOT_OPTIONS_AND_ARGS]... Options: --version Show the version and exit. --help Show this message and exit.","title":"Reference"},{"location":"cli/reference/#robotcode","text":"Usage: robotcode [OPTIONS] COMMAND [ARGS]... Options: --version Show the version and exit. -c, --config PATH Config file to use. -p, --profile TEXT The Execution Profile to use. Can be specified multiple times. If not specified, the default profile is used. -d, --dry Dry run, do not execute any commands. --color / --no-color Whether or not to display colored output (default is auto-detection). -v, --verbose Enables verbose mode. --help Show this message and exit. Subcommands analyze : Analyzes a Robot Framework project. clean : TODO: Cleans a Robot Framework project. config : Commands to give informations about a robotframework configuration. debug : TODO: Debug a Robot Framework run. libdoc : Runs \"libdoc\" with the selected configuration, profiles, options and arguments. new : TODO: Create a new Robot Framework project. profiles : Commands to give informations about Robot Framework profiles. rebot : Runs \"rebot\" with the selected configuration, profiles, options and arguments. robot : Runs \"robot\" with the selected configuration, profiles, options and arguments.","title":"robotcode"},{"location":"cli/reference/#robotcode-analyze","text":"Analyzes a Robot Framework project. TODO: This is not implemented yet. Usage: robotcode analyze [OPTIONS] Options: --version Show the version and exit. --help Show this message and exit.","title":"analyze"},{"location":"cli/reference/#robotcode-clean","text":"TODO: Cleans a Robot Framework project. TODO: This is not implemented yet. Usage: robotcode clean [OPTIONS] Options: --help Show this message and exit.","title":"clean"},{"location":"cli/reference/#robotcode-config","text":"Commands to give informations about a robotframework configuration. By default the combined configuration is shown. Usage: robotcode config [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. Subcommands files : Shows Robot Framework configuration files. root : Shows the root of the Robot Framework project. show : Shows Robot Framework configuration.","title":"config"},{"location":"cli/reference/#robotcode-config-files","text":"Shows Robot Framework configuration files. Usage: robotcode config files [OPTIONS] [PATHS]... Options: --help Show this message and exit.","title":"files"},{"location":"cli/reference/#robotcode-config-root","text":"Shows the root of the Robot Framework project. Usage: robotcode config root [OPTIONS] [PATHS]... Options: --help Show this message and exit.","title":"root"},{"location":"cli/reference/#robotcode-config-show","text":"Shows Robot Framework configuration. Usage: robotcode config show [OPTIONS] [PATHS]... Options: -f, --format [toml|json|flat] Set the output format. [default: toml] -s, --single Shows single files, not the combined config. --help Show this message and exit.","title":"show"},{"location":"cli/reference/#robotcode-debug","text":"TODO: Debug a Robot Framework run. TODO: This is not implemented yet. Usage: robotcode debug [OPTIONS] Options: --help Show this message and exit.","title":"debug"},{"location":"cli/reference/#robotcode-libdoc","text":"Runs \"libdoc\" with the selected configuration, profiles, options and arguments. The options and arguments are passed to \"libdoc\" as is. Use \"-- --help\" to see the libdoc help. Usage: robotcode libdoc [OPTIONS] [ROBOT_OPTIONS_AND_ARGS]... Options: --version Show the version and exit. --help Show this message and exit.","title":"libdoc"},{"location":"cli/reference/#robotcode-new","text":"TODO: Create a new Robot Framework project. TODO: This is not implemented yet. Usage: robotcode new [OPTIONS] Options: --help Show this message and exit.","title":"new"},{"location":"cli/reference/#robotcode-profiles","text":"Commands to give informations about Robot Framework profiles. Usage: robotcode profiles [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. Subcommands list : List the defined profiles in the given Robot Framework configuration. show : Shows the given Robot Framework profile.","title":"profiles"},{"location":"cli/reference/#robotcode-profiles-list","text":"List the defined profiles in the given Robot Framework configuration. Usage: robotcode profiles list [OPTIONS] [PATHS]... Options: -f, --format [toml|json|flat] Set the output format. [default: flat] --help Show this message and exit.","title":"list"},{"location":"cli/reference/#robotcode-profiles-show","text":"Shows the given Robot Framework profile. Usage: robotcode profiles show [OPTIONS] [PATHS]... Options: -f, --format [toml|json|flat] Set the output format. [default: toml] --help Show this message and exit.","title":"show"},{"location":"cli/reference/#robotcode-rebot","text":"Runs \"rebot\" with the selected configuration, profiles, options and arguments. The options and arguments are passed to \"rebot\" as is. Use \"-- --help\" to see the rebot help. Usage: robotcode rebot [OPTIONS] [ROBOT_OPTIONS_AND_ARGS]... Options: --version Show the version and exit. --help Show this message and exit.","title":"rebot"},{"location":"cli/reference/#robotcode-robot","text":"Runs \"robot\" with the selected configuration, profiles, options and arguments. The options and arguments are passed to \"robot\" as is. Use \"-- --help\" to see the robot help. Usage: robotcode robot [OPTIONS] [ROBOT_OPTIONS_AND_ARGS]... Options: --version Show the version and exit. --help Show this message and exit.","title":"robot"}]}